{"version":3,"sources":["components/Tours/SingleTour/SingleTour.js","custom-hooks/useLength.js","pages/Tours/Tours.js"],"names":["SingleTour","React","memo","tourIcon","tourState","tourCities","tourPrice","tourDuration","tourImg","tourId","className","map","city","index","src","alt","to","useLength","myArray","myRef","useEffect","length","current","classList","remove","add","reducer","state","action","type","filterType","filterByValue","value","additionalFilterValue","visibleTours","filteredTours","customFilterValues","filterName","filterValue","customFilterData","filterData","Tours","allTours","useSelector","tours","MAIN_FILTER_NAMES","ADDITIONAL_FILTER_VALUES","continent","Set","tour","cities","reduce","arr","el","concat","price","days","sort","activities","meditation","useReducer","dispatch","updatedTours","adjustedStates","adjustedCities","currentContinent","currentState","currentCity","currentPrice","currentDays","currentActivity","currentMeditation","filter","includes","priceRange","displayedTours","id","displayIcon","displayImg","tourLink","link","style","fontSize","fontWeight","textAlign","width","margin","tourContainer","useRef","filterByField","htmlFor","name","onChange","event","inputValue","filterByValueChanged","target","option","additionalFilterValueChanged","customFilterField","e","titleClassname","icon","titleText","titleAdditional","onClick","key","ref"],"mappings":"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","file":"static/js/9.1cdea22c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './single-tour.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SingleTour = React.memo(({tourIcon, tourState, tourCities, tourPrice, tourDuration, tourImg, tourId}) => {\r\n  return (\r\n    <article className=\"tours-single-tour\">\r\n      <div className=\"tours-single-tour__title\">\r\n          <div className=\"tours-single-tour__icon\">\r\n            {tourIcon}\r\n          </div>\r\n          <p className=\"tours-single-tour__state\">\r\n            {tourState}\r\n          </p>\r\n        </div>\r\n      <div className=\"tours-single-tour__info\">\r\n        \r\n        <div className=\"tours-single-tour__cities\">\r\n          <p className=\"tours-single-tour__cities-text\">\r\n            You will visit:\r\n          </p>\r\n          <ul className=\"tours-single-tour__cities-list\">\r\n            {tourCities.map((city, index) => (\r\n              <li\r\n                key={index}\r\n                className=\"tours-single-tour__cities-city\">\r\n                {city}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <p className=\"tours-single-tour__price\">\r\n          price: ${tourPrice}\r\n        </p>\r\n        <p className=\"tours-single-tour__duration\">\r\n          You wll stay {tourDuration} days\r\n        </p>\r\n      </div>\r\n      <div className=\"tours-single-tour__img\">\r\n        <img src={tourImg} alt={tourState} />\r\n      </div>\r\n      <Link to={`/tours/${tourId}`} className=\"tours-single-tour__link\">see details or book tour</Link>\r\n    </article>\r\n  );\r\n})\r\n\r\nexport default SingleTour;\r\n","import { useEffect } from 'react';\r\n\r\nexport const useLength = (myArray, myRef) => {\r\n  useEffect(() => {\r\n    if(myArray.length === 1) {\r\n      myRef.current.classList.remove(\"container-col-2-3\");\r\n      myRef.current.classList.add(\"container-col-1\");\r\n    } else if(myArray.length > 1 && myArray.length <= 3) {\r\n      myRef.current.classList.remove(\"container-col-1\");\r\n      myRef.current.classList.add(\"container-col-2-3\");\r\n    } else if(myArray.length > 3) {\r\n      myRef.current.classList.remove(\"container-col-1\");\r\n      myRef.current.classList.remove(\"container-col-2-3\");\r\n    }\r\n  }, [myArray, myRef]);\r\n};","import React, { useEffect, useReducer, useRef } from 'react';\r\nimport { useLength } from '../../custom-hooks/useLength';\r\nimport './tours.scss';\r\nimport '../../sass-additions/helper-classes.scss';\r\nimport { useSelector} from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport SectionTitle from '../../components/SectionTitle/SectionTitle';\r\nimport SingleTour from '../../components/Tours/SingleTour/SingleTour';\r\nimport { MdCardTravel } from 'react-icons/md';\r\nimport { AiOutlineFilter } from 'react-icons/ai';\r\n\r\n// reducers outside component\r\nconst reducer = (state, action) => {\r\n  switch(action.type) {\r\n    case(\"SWITCH_FILTER_TYPE\"):\r\n      return {\r\n        ...state,\r\n        filterType: action.filterType\r\n      };\r\n    case(\"FILTER_BY_VALUE_CHANGED\"):\r\n      return {\r\n        ...state,\r\n        filterByValue: action.value\r\n      };\r\n    case(\"ADDITIONAL_FILTER_VALUE_CHANGED\"):\r\n      return {\r\n        ...state,\r\n        additionalFilterValue: action.value\r\n      };\r\n    case(\"FILTER_TOURS\"):\r\n      return {\r\n        ...state,\r\n        visibleTours: action.filteredTours\r\n      };\r\n    case(\"CUSTOM_FILTER_FIELD_CHANGED\"):\r\n      return {\r\n        ...state,\r\n        customFilterValues: {\r\n          ...state.customFilterValues,\r\n          [action.filterName]: action.filterValue\r\n        }\r\n      };\r\n    case(\"ADJUST_CUSTOM_FILTER_FIELDS\"):\r\n      return {\r\n        ...state,\r\n        customFilterData: {\r\n          ...state.customFilterData,\r\n          [action.filterName]: action.filterData\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// COMPONENT\r\nconst Tours = () => {\r\n  // tours from the redux reducer\r\n  const allTours = useSelector(state => state.tours.tours);\r\n  // filtering data\r\n  const MAIN_FILTER_NAMES = [\r\n    \"none\",\r\n    \"continent\",\r\n    \"state\",\r\n    \"city\",\r\n    \"price\",\r\n    \"days\",\r\n    \"activities\",\r\n    \"meditation\"\r\n  ];\r\n  const ADDITIONAL_FILTER_VALUES = {\r\n    continent: [...new Set(allTours.map(tour => tour.continent))],\r\n    state: [...new Set(allTours.map(tour => tour.state))],\r\n    city: [...new Set(allTours.map(tour => tour.cities)\r\n      .reduce((arr, el) => {\r\n        return arr.concat(el)\r\n      }, []))],\r\n    price: [\r\n      \"< $500\",\r\n      \"$500 - $1000\",\r\n      \"$1000 - $1500\",\r\n      \"$1500 - $2000\",\r\n      \"$2000 - $2500\"\r\n    ],\r\n    days: [...new Set(allTours.map(tour => tour.days).sort())],\r\n    activities: [\r\n      \"all\",\r\n      \"swimming\",\r\n      \"climbing\"\r\n    ],\r\n    meditation: [\r\n      \"with\",\r\n      \"without\"\r\n    ]\r\n  };\r\n\r\n  //  useReducer state\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    filterType: \"filterBy\",\r\n    filterByValue: \"none\",\r\n    additionalFilterValue: \"\",\r\n    visibleTours: allTours,\r\n    customFilterData: {\r\n      continent: [\"any\", ...new Set(allTours.map(tour => tour.continent))],\r\n      state: [\"any\", ...new Set(allTours.map(tour => tour.state))],\r\n      city: [\"any\", ...new Set(allTours.map(tour => tour.cities)\r\n      .reduce((cities, city) => {\r\n          return cities.concat(city);\r\n        }, []))],\r\n      price: [\r\n        \"any\",\r\n        \"< $500\",\r\n        \"$500 - $1000\",\r\n        \"$1000 - $1500\",\r\n        \"$1500 - $2000\",\r\n        \"$2000 - $2500\"\r\n      ],\r\n      days: [\"any\", ...new Set(allTours.map(tour => tour.days).sort())],\r\n      activities: [\r\n        \"any\",\r\n        \"swimming\",\r\n        \"climbing\"\r\n      ],\r\n      meditation: [\r\n        \"any\",\r\n        \"with\",\r\n        \"without\"\r\n      ]\r\n    },\r\n    customFilterValues: {\r\n      continent: \"any\",\r\n      state: \"any\",\r\n      city: \"any\",\r\n      price: \"any\",\r\n      days: \"any\",\r\n      activities: \"any\",\r\n      meditation: \"any\"\r\n    }\r\n  });\r\n\r\n  // switch filter type\r\n  const swicthFilterType = () => {\r\n    dispatch({type: \"FILTER_TOURS\", filteredTours: allTours});\r\n\r\n    if(state.filterType === \"filterBy\") {\r\n      dispatch({type: \"SWITCH_FILTER_TYPE\", filterType: \"customFilter\"});\r\n\r\n      for(const key in state.customFilterValues) {\r\n        dispatch({type: \"CUSTOM_FILTER_FIELD_CHANGED\", filterName: key, filterValue: \"any\"});\r\n      }\r\n\r\n    } else if(state.filterType === \"customFilter\") {\r\n      dispatch({type: \"SWITCH_FILTER_TYPE\", filterType: \"filterBy\"});\r\n\r\n      dispatch({type: \"FILTER_BY_VALUE_CHANGED\", value: \"none\"});\r\n    }\r\n  };\r\n\r\n  //filter by value changed\r\n  const filterByValueChanged = (inputValue) => {\r\n    dispatch({type: \"FILTER_BY_VALUE_CHANGED\", value: inputValue});\r\n\r\n    if(inputValue === \"none\") {\r\n      dispatch({type: \"ADDITIONAL_FILTER_VALUE_CHANGED\", value: \"\"});\r\n      dispatch({type: \"FILTER_TOURS\", filteredTours: allTours })\r\n    } else {\r\n      dispatch({type: \"ADDITIONAL_FILTER_VALUE_CHANGED\", value: ADDITIONAL_FILTER_VALUES[inputValue][0]});\r\n\r\n      // setup tours according to initial additional filter values\r\n      let updatedTours = [];\r\n\r\n      if(inputValue !== \"price\" && inputValue !== \"activities\") {\r\n        updatedTours = allTours.filter(tour => tour[inputValue] === ADDITIONAL_FILTER_VALUES[inputValue][0]);\r\n      } else if(inputValue === \"price\") {\r\n        updatedTours = allTours.filter(tour => tour.priceRange === ADDITIONAL_FILTER_VALUES[inputValue][0]);\r\n      } else if(inputValue === \"activities\") {\r\n        updatedTours = allTours.filter(tour => tour.activities.length > 1);\r\n      }\r\n      dispatch({type: \"FILTER_TOURS\", filteredTours: updatedTours });\r\n    }\r\n  };\r\n\r\n  // managing additional filter value changes\r\n  const additionalFilterValueChanged = (inputValue) => {\r\n    dispatch({type: \"ADDITIONAL_FILTER_VALUE_CHANGED\", value: inputValue});\r\n\r\n    let updatedTours = [];\r\n\r\n    if(state.filterByValue !== \"price\" && state.filterByValue !== \"activities\") {\r\n      updatedTours = allTours.filter(tour => tour[state.filterByValue] === inputValue);\r\n    } else if(state.filterByValue === \"price\") {\r\n      updatedTours = allTours.filter(tour => tour.priceRange === inputValue);\r\n    } else if(state.filterByValue === \"activities\" && inputValue !== \"all\") {\r\n      updatedTours = allTours.filter(tour => tour.activities.includes(inputValue));\r\n    } else if(state.filterByValue === \"activities\" && inputValue === \"all\") {\r\n      updatedTours = allTours.filter(tour => tour.activities.length > 1);\r\n    }\r\n\r\n    dispatch({type: \"FILTER_TOURS\", filteredTours: updatedTours });\r\n  };\r\n\r\n  // managing custom filter fileds changes\r\n  const customFilterFieldsChanged = (inputValue, filterName) => {\r\n    dispatch({type: \"CUSTOM_FILTER_FIELD_CHANGED\", filterName, filterValue: inputValue});\r\n\r\n    if(filterName === \"state\" && inputValue !== \"any\") {\r\n      dispatch({type: \"CUSTOM_FILTER_FIELD_CHANGED\", filterName: \"city\", filterValue: \"any\"});\r\n    }\r\n    if(filterName === \"continent\" && inputValue !== \"any\") {\r\n      dispatch({type: \"CUSTOM_FILTER_FIELD_CHANGED\", filterName: \"state\", filterValue: \"any\"});\r\n      dispatch({type: \"CUSTOM_FILTER_FIELD_CHANGED\", filterName: \"city\", filterValue: \"any\"});\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let updatedTours;\r\n    let adjustedStates;\r\n    let adjustedCities;\r\n    let currentContinent = state.customFilterValues.continent;\r\n    let currentState = state.customFilterValues.state;\r\n    let currentCity = state.customFilterValues.city;\r\n    let currentPrice = state.customFilterValues.price;\r\n    let currentDays = state.customFilterValues.days;\r\n    let currentActivity = state.customFilterValues.activities;\r\n    let currentMeditation = state.customFilterValues.meditation;\r\n\r\n    if(currentContinent === \"any\") {\r\n      //state any\r\n      if(currentState === \"any\") {\r\n\r\n        if(currentCity === \"any\") {\r\n          updatedTours = allTours;\r\n        }\r\n        if(currentCity !== \"any\") {\r\n          updatedTours = allTours.filter(tour => tour.cities.includes(currentCity));\r\n        }\r\n        adjustedStates = [\"any\", ...new Set(allTours.map(tour => tour.state))];\r\n        adjustedCities = [\"any\", ...new Set(allTours.map(tour => tour.cities).reduce((cities, city) => {\r\n          return cities.concat(city);\r\n        }, []))];\r\n      }\r\n      // state !== any\r\n      \r\n      if(currentState !== \"any\") {\r\n        updatedTours = allTours.filter(tour => tour.state === currentState);\r\n        adjustedStates = [\"any\", ...new Set(allTours.map(tour => tour.state))];\r\n        adjustedCities = [\"any\", ...new Set(updatedTours.map(tour => tour.cities).reduce((cities, city) => {\r\n          return cities.concat(city);\r\n        }, []))];\r\n\r\n        if(currentCity === \"any\") {\r\n          updatedTours = allTours.filter(tour => tour.state === currentState); \r\n        }\r\n        if(currentCity !== \"any\") {\r\n          updatedTours = allTours.filter(tour => tour.state === currentState && tour.cities.includes(currentCity));\r\n        }\r\n      }\r\n    }\r\n\r\n    if(currentContinent !== \"any\") {\r\n      updatedTours = allTours.filter(tour => tour.continent === currentContinent);\r\n      adjustedStates = [\"any\", ...new Set(updatedTours.map(tour => tour.state))];\r\n      adjustedCities = [\"any\", ...new Set(updatedTours.map(tour => tour.cities).reduce((cities, city) => {\r\n          return cities.concat(city);\r\n        }, []))];\r\n\r\n      if(currentState === \"any\") {\r\n        if(currentCity !== \"any\") {\r\n          updatedTours =  allTours.filter(tour => tour.continent === currentContinent && tour.cities.includes(currentCity));\r\n        }\r\n      }\r\n\r\n      if(currentState !== \"any\") {\r\n        updatedTours = allTours.filter(tour => tour.continent === currentContinent && tour.state === currentState);\r\n        adjustedCities = [\"any\", ...new Set(updatedTours.map(tour => tour.cities).reduce((cities, city) => {\r\n          return cities.concat(city);\r\n        }, []))];\r\n\r\n        if(currentCity !== \"any\") {\r\n          updatedTours = allTours.filter(tour => tour.continent === currentContinent && tour.state === currentState && tour.cities.includes(currentCity));\r\n        }\r\n      }\r\n    }\r\n\r\n    if(currentPrice !== \"any\") {\r\n      updatedTours = updatedTours.filter(tour => tour.priceRange === currentPrice);\r\n    }\r\n    if(currentDays !== \"any\") {\r\n      updatedTours = updatedTours.filter(tour => tour.days === currentDays);\r\n    }\r\n    if(currentActivity !== \"any\") {\r\n      updatedTours = updatedTours.filter(tour => tour.activities.includes(currentActivity));\r\n    }\r\n    if(currentMeditation !== \"any\") {\r\n      updatedTours = updatedTours.filter(tour => tour.meditation === currentMeditation);\r\n    }\r\n\r\n    dispatch({type: \"FILTER_TOURS\", filteredTours: updatedTours});\r\n    dispatch({type: \"ADJUST_CUSTOM_FILTER_FIELDS\", filterName: \"state\", filterData: adjustedStates});\r\n    dispatch({type: \"ADJUST_CUSTOM_FILTER_FIELDS\", filterName: \"city\", filterData: adjustedCities});\r\n  }, [state.customFilterValues, allTours]);\r\n\r\n  let displayedTours = state.visibleTours.map(tour => {\r\n    return <SingleTour\r\n      key={tour.id}\r\n      tourId={tour.id}\r\n      tourIcon={tour.displayIcon}\r\n      tourState={tour.state}\r\n      tourCities={tour.cities}\r\n      tourPrice={tour.price}\r\n      tourDuration={tour.days}\r\n      tourImg={tour.displayImg}\r\n      tourLink={tour.link} />\r\n  });\r\n  \r\n  if(state.visibleTours.length === 0) {\r\n    displayedTours = (\r\n      <p style={{\r\n        fontSize: \"1.8rem\",\r\n        fontWeight: \"bold\",\r\n        textAlign: \"center\",\r\n        width: \"100%\",\r\n        margin: \"0 auto\"\r\n      }}>\r\n        No tours matching your search requirements\r\n      </p>\r\n    );\r\n  }\r\n\r\n  // MANAGE DISPLAY ACCORDING TO NUMBER OF TOURS\r\n  const tourContainer = useRef(null);\r\n  useLength(displayedTours, tourContainer);\r\n\r\n  // filtering fields\r\n  let filterByField = (\r\n    <article className=\"tours__filter-list\">\r\n      <div className=\"tours__filter-list__item\">\r\n        <label htmlFor=\"filterBy\">\r\n          filter by: \r\n        </label>\r\n        <select\r\n          id=\"filterBy\"\r\n          name=\"filterBy\"\r\n          value={state.filterByValue}\r\n          onChange={(event) => filterByValueChanged(event.target.value)}>\r\n            {MAIN_FILTER_NAMES.filter(option => option !== \"city\")\r\n            .map(option => {\r\n              return (\r\n                <option\r\n                  key={option}\r\n                  value={option}>\r\n                  {option}\r\n                </option>\r\n              );\r\n            })}\r\n        </select>\r\n      </div>\r\n      {state.filterByValue === \"none\" || (\r\n        <div className=\"tours__filter-by__addition\">\r\n          <label htmlFor=\"additional\">\r\n            Choose by {state.filterByValue}:\r\n          </label>\r\n          <select\r\n            id=\"additional\"\r\n            name=\"additional\"\r\n            value={state.additionalFilterValue}\r\n            onChange={(event) => additionalFilterValueChanged(event.target.value)}>\r\n            {ADDITIONAL_FILTER_VALUES[state.filterByValue].map(option => {\r\n              return (\r\n                <option\r\n                  key={option}\r\n                  value={option}>\r\n                  {option}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n      )} \r\n    </article>\r\n  );\r\n\r\n  let customFilterField = (\r\n    <article className=\"tours__filter-list\">\r\n      {MAIN_FILTER_NAMES.filter(filter => filter !== \"none\")\r\n        .map(filter => {\r\n          return (\r\n            <div\r\n              className=\"tours__filter-list__item\"\r\n              key={filter}>\r\n              <label htmlFor={filter}>\r\n                {filter}:\r\n              </label>\r\n              <select\r\n                id={filter}\r\n                name={filter}\r\n                value={state.customFilterValues[filter]}\r\n                onChange={(e) => customFilterFieldsChanged(e.target.value, filter)}>\r\n                {state.customFilterData[filter].map(option => (\r\n                  <option\r\n                    key={option}\r\n                    value={option}>\r\n                    {option}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          );\r\n        })}\r\n    </article>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <SectionTitle\r\n        titleClassname=\"tours\"\r\n        icon={<MdCardTravel />}\r\n        titleText=\"tours\"\r\n        titleAdditional=\"all of them\" />\r\n      <div className=\"tours__content\">\r\n        <p className=\"tours__text\">\r\n          These are our tours. All that we can offer at the moment. As our company grows, we'll be adding more oportunities for you to explore. You can filter through them and hopefully find what you are looking for\r\n        </p>       \r\n        <section className=\"tours__filter\">\r\n          <article className=\"tours__filter-title\">\r\n            <p className=\"tours__filter-title__text\">filter tours</p>\r\n            <div className=\"tours__filter-title__icon\">\r\n              <AiOutlineFilter />\r\n            </div>\r\n          </article>\r\n          {state.filterType === \"filterBy\" ? filterByField : customFilterField}\r\n          <button\r\n            type=\"button\"\r\n            className=\"tours__filter-switch\"\r\n            onClick={swicthFilterType}>\r\n            {state.filterType === \"filterBy\" ? \r\n            \"switch to custom filtering\" :\r\n            \"switch to filtering by group\"}\r\n          </button>\r\n        </section>\r\n        <section className=\"tours__tours\">\r\n          <p className=\"tours__tours-info\">\r\n            selected tours\r\n          </p>\r\n          <div className=\"tours__tours-content\" ref={tourContainer}>\r\n            {displayedTours}\r\n          </div>\r\n        </section>\r\n        <section className=\"tours__request\">\r\n          <p className=\"tours__text\">\r\n            Haven't found what you were looking for? Unfortunately, for now these are all tours that we have at our disposal.\r\n            <br />\r\n            <br />\r\n            As we are growing company, we'll be expanding our offers. To contribute, you can require a tour. \r\n            <br />\r\n            Go to the link bellow, and tell us where would you like to go. We'll be adding more tour options according to all of yours requirements.\r\n          </p>\r\n          <Link \r\n            to=\"/request-tour\"\r\n            className=\"tours__request-link\">\r\n            request tour\r\n          </Link>\r\n        </section>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Tours;\r\n"],"sourceRoot":""}