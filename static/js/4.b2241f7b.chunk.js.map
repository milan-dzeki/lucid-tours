{"version":3,"sources":["components/UI/ErrorModal/ErrorModal.js","components/UI/Spinner/Spinner.js","components/UI/RedirectModal/RedirectModal.js","custom-hooks/useRedirectModal.js","components/UI/Form/Form.js","components/UI/Input/Input.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","pages/LeaveReview/LeaveReview.js"],"names":["ErrorModal","props","show","errorModalShow","backdropClicked","errorModalClosed","mountOnEnter","unmountOnExit","in","timeout","classNames","className","errorModalMsg","type","onClick","Spinner","RedirectModal","dispatch","useDispatch","redirectModalShow","redirectModalClosed","redirectModalTitle","to","actions","useRedirectModal","useState","setRedirectModalShow","showRedirectModal","hideRedirectModal","Form","formClassname","children","style","display","signUpButtonShown","disabled","formIsValid","formSubmitHandler","formBtnText","Input","elementType","elementConfig","inputChanged","inputUnfocused","value","disabledInfo","defaultValue","readOnly","shouldValidate","inputTouched","inputValid","inputWarning","inputWarningShown","inputWarningShowHandler","inputFieldClasses","push","input","warningMessageClasses","join","atributes","onChange","onBlur","htmlFor","label","for","name","id","hidden","options","map","option","uuid","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","REGEX","test","byteToHex","i","toString","substr","stringify","arr","offset","arguments","length","undefined","toLowerCase","TypeError","v4","buf","rnds","random","LeaveReview","isAuth","useSelector","state","auth","token","userID","onFetchAgencyReview","useCallback","userId","useEffect","fetchedAgencyReview","reviews","agencyReview","agencyReviewExists","setAgencyReviewExists","agencyReviewExistsError","setAgencyReviewExistsError","isLoading","sendReviewLoading","isError","sendReviewError","onLeaveReview","revData","form","allTours","tours","states","Set","tour","placeholder","validation","required","touched","valid","job","travel1","travel2","travel3","reviewText","rating","min","max","minValue","maxValue","agencyReviewForm","setAgencyReviewForm","travel","tourReviewForm","setTourReviewForm","checkInputValidity","rules","isValid","trim","parseInt","agencyReviewFormIsValid","setAgencyReviewFormIsValid","tourReviewFormIsValid","setTourReviewFormIsValid","checkFormValidity","currentForm","setFormValidity","inputsValid","key","includes","selectedForm","setSelectedForm","agencyReviewFormData","element","config","tourReviewFormData","formDisplayed","formValidity","formTitle","displayFormByMethod","formElements","changedHandler","el","event","prevState","checkValidityAfterFocus","target","clearInputFields","setForm","updatedForm","actualForm","preventDefault","formData","review","textAlign","fontSize","marginTop","textTransform","width","margin","padding","backgroundColor","color","titleClassname","icon","titleText","titleAdditional"],"mappings":"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","file":"static/js/4.b2241f7b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './error-modal.scss';\r\nimport '../../../sass-additions/helper-classes.scss';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport CSSTransition from 'react-transition-group/CSSTransition';\r\n\r\nconst ErrorModal = props => {\r\n  return (\r\n    <>\r\n      <Backdrop\r\n        show={props.errorModalShow}\r\n        backdropClicked={props.errorModalClosed} />\r\n      <CSSTransition\r\n        mountOnEnter\r\n        unmountOnExit\r\n        in={props.errorModalShow}\r\n        timeout={300}\r\n        classNames=\"show\">\r\n        <div className=\"error-modal\">\r\n          <p className=\"error-modal__title\">\r\n            Error occured\r\n          </p>\r\n          <p className=\"error-modal__message\">\r\n            {props.errorModalMsg}\r\n          </p>\r\n          <button \r\n            type=\"button\"\r\n            className=\"error-modal__btn\"\r\n            onClick={props.errorModalClosed}>\r\n              OK\r\n            </button>\r\n        </div>\r\n      </CSSTransition>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ErrorModal\r\n","import React from 'react';\r\nimport './spinner.scss';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"spinner\">\r\n      loading...\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport './redirect-modal.scss';\r\nimport '../../../sass-additions/helper-classes.scss';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport CSSTransition from 'react-transition-group/CSSTransition';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nconst RedirectModal = props => {\r\n  const dispatch = useDispatch();\r\n  // logout action\r\n  const onLogout = () => dispatch(actions.logout());\r\n  // logout and close modal\r\n  const logoutAndCloseModal = () => {\r\n    onLogout();\r\n    props.redirectModalClosed();\r\n  };\r\n  return (\r\n    <>\r\n      <Backdrop\r\n        show={props.redirectModalShow}\r\n        backdropClicked={props.redirectModalClosed} />\r\n      <CSSTransition\r\n        mountOnEnter\r\n        unmountOnExit\r\n        in={props.redirectModalShow}\r\n        timeout={300}\r\n        classNames=\"show\">\r\n        <div className=\"redirect-modal\">\r\n          <h3 className=\"redirect-modal__title\">\r\n            {props.redirectModalTitle}\r\n          </h3>\r\n          <div className=\"redirect-modal__content\">\r\n            <Link to=\"/\" onClick={props.redirectModalClosed}>go home</Link>\r\n            <Link to=\"/your-page\" onClick={props.redirectModalClosed}>go to your page</Link>\r\n            <Link to=\"/tours\" onClick={props.redirectModalClosed}>view tours</Link>\r\n            <Link to=\"/leave-review\" onClick={props.redirectModalClosed}>leave review</Link>\r\n            <Link to=\"/request-tour\" onClick={props.redirectModalClosed}>request tour</Link>\r\n            <button \r\n              className=\"redirect-modal__logout\"\r\n              onClick={logoutAndCloseModal}>logout</button>\r\n          </div>\r\n          <button \r\n            className=\"redirect-modal__btn\"\r\n            onClick={props.redirectModalClosed}>\r\n            close\r\n          </button>\r\n        </div>\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RedirectModal;\r\n","import { useState } from 'react';\r\n\r\nexport const useRedirectModal = () => {\r\n  const [redirectModalShow, setRedirectModalShow] = useState(false);\r\n\r\n  const showRedirectModal = () => {\r\n    setRedirectModalShow(true);\r\n  };\r\n  const hideRedirectModal = () => {\r\n    setRedirectModalShow(false);\r\n  };\r\n\r\n  return {\r\n    redirectModalShow,\r\n    showRedirectModal,\r\n    hideRedirectModal\r\n  };\r\n};","import React from 'react';\r\nimport './form.scss';\r\n\r\nconst Form = props => {\r\n  return (\r\n    <form className={`form form__${props.formClassname}`}>\r\n      {props.children}\r\n      <button \r\n        type=\"submit\"\r\n        className=\"form__submit-btn\"\r\n        style={{display: props.signUpButtonShown ? \"none\" : \"block\"}}\r\n        disabled={!props.formIsValid}\r\n        onClick={props.formSubmitHandler}>\r\n        {props.formBtnText}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport './input.scss';\r\nimport { v4 as uuid} from 'uuid';\r\nimport { RiErrorWarningLine } from 'react-icons/ri';\r\n\r\nconst Input = ({elementType, elementConfig, inputChanged, inputUnfocused, value, disabledInfo, defaultValue, readOnly, shouldValidate, inputTouched, inputValid, inputWarning, inputWarningShown, inputWarningShowHandler}) => {\r\n  let inputFieldClasses = [\"generic-input__field\"];\r\n\r\n  if(shouldValidate && inputTouched && inputValid) {\r\n    inputFieldClasses.push(\"field-valid\");\r\n  }\r\n  if(shouldValidate && inputTouched && !inputValid) {\r\n    inputFieldClasses.push(\"field-invalid\");\r\n  }\r\n  let input = null;\r\n\r\n  let warningMessageClasses = [\"generic-input__message\"];\r\n\r\n  if(inputWarningShown) {\r\n    warningMessageClasses.push(\"warning-shown\");\r\n  }\r\n\r\n  switch(elementType) {\r\n    case \"inputText\":\r\n      input = (\r\n        <div className=\"generic-input\">\r\n          <div className={warningMessageClasses.join(\" \")}>\r\n            <div className=\"generic-input__message-icon\">\r\n              <RiErrorWarningLine />\r\n            </div>\r\n            <p className=\"generic-input__message-text\">\r\n              {inputWarning}\r\n            </p>\r\n          </div>\r\n          <input \r\n            className={inputFieldClasses.join(\" \")} \r\n            {...elementConfig.atributes} \r\n            value={value} \r\n            readOnly={readOnly} \r\n            onChange={inputChanged} \r\n            disabled={disabledInfo}\r\n            onBlur={inputUnfocused}\r\n            onClick={inputWarningShowHandler} />\r\n        </div>\r\n      );\r\n      break;\r\n    case \"inputNumber\":\r\n      input = (\r\n        <div className=\"generic-input\">\r\n          <label htmlFor={elementConfig.label.for} style={{display: elementConfig.label.show ? \"block\" : \"none\"}}>\r\n            {elementConfig.label.name}\r\n          </label>\r\n          <input \r\n            className={inputFieldClasses.join(\" \")} \r\n            {...elementConfig.atributes} \r\n            value={value} \r\n            readOnly={readOnly} \r\n            onChange={inputChanged} \r\n            disabled={disabledInfo}\r\n            onBlur={inputUnfocused}\r\n            onClick={inputWarningShowHandler} />\r\n        </div>\r\n      );\r\n      break;\r\n    case \"textarea\":\r\n      input = (\r\n        <div className=\"generic-input\">\r\n          <label htmlFor={elementConfig.label.for}>\r\n            {elementConfig.label.name}\r\n          </label>\r\n          <textarea id={elementConfig.label.for} {...elementConfig.atributes} value={value} className={inputFieldClasses.join(\" \")} onChange={inputChanged} onBlur={inputUnfocused}></textarea>\r\n        </div>\r\n      );\r\n      break;\r\n    case \"select\":\r\n      input = (\r\n        <div className={`generic-input ${disabledInfo && \"field-disabled\"}`}>\r\n          <label \r\n            htmlFor={elementConfig.label.for}>\r\n            {elementConfig.label.name}\r\n          </label>\r\n          <select\r\n            className=\"generic-input__field\"\r\n            id={elementConfig.label.for}\r\n            name={elementConfig.atributes.name}\r\n            value={value || \"default\"}\r\n            onChange={inputChanged}\r\n            disabled={disabledInfo}>\r\n              <option \r\n                value=\"choose\" \r\n                hidden>\r\n                {defaultValue}\r\n              </option>\r\n            {elementConfig.options.map(option => (\r\n              <option\r\n                key={uuid()}\r\n                value={option.name}>\r\n                {option.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      );\r\n      break;\r\n    default:\r\n      input = <input />;\r\n  }\r\n  return input;\r\n}\r\n\r\nexport default Input;\r\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import React, { useState, useEffect, useCallback } from 'react';\r\nimport './leave-review.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport SectionTitle from '../../components/SectionTitle/SectionTitle';\r\nimport { VscPreview } from 'react-icons/vsc';\r\nimport Form from '../../components/UI/Form/Form';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport ErrorModal from '../../components/UI/ErrorModal/ErrorModal';\r\nimport RedirectModal from '../../components/UI/RedirectModal/RedirectModal';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useRedirectModal } from '../../custom-hooks/useRedirectModal';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst LeaveReview = () => {\r\n  const dispatch = useDispatch();\r\n  // auth state\r\n  const isAuth = useSelector(state => state.auth.token);\r\n  const userID = useSelector(state => state.auth.userID);\r\n  // get agency review to enable adding new one if there is one added\r\n  const onFetchAgencyReview = useCallback((token, userId) => dispatch(actions.fetchAgencyReview(token, userId)), [dispatch]);\r\n  // fetch agency review\r\n  useEffect(() => {\r\n    onFetchAgencyReview(isAuth, userID);\r\n  }, [onFetchAgencyReview, isAuth, userID]);\r\n  const fetchedAgencyReview = useSelector(state => state.reviews.agencyReview);\r\n  // review already exists state\r\n  const [agencyReviewExists, setAgencyReviewExists] = useState(false);\r\n  useEffect(() => {\r\n    if(fetchedAgencyReview !== null) {\r\n      setAgencyReviewExists(true);\r\n    } else {\r\n      setAgencyReviewExists(false);\r\n    }\r\n  }, [fetchedAgencyReview]);\r\n  // agency exists error\r\n  const [agencyReviewExistsError, setAgencyReviewExistsError] = useState(false);\r\n  // redirect modal\r\n  const {redirectModalShow, showRedirectModal, hideRedirectModal} = useRedirectModal();\r\n  // loading and error state\r\n  const isLoading = useSelector(state => state.reviews.sendReviewLoading);\r\n  const isError = useSelector(state => state.reviews.sendReviewError);\r\n  // clear error\r\n  const onLeaveReviewClearError = () => dispatch(actions.leaveReviewClearError());\r\n  // send review action\r\n  const onLeaveReview = (revData, form, token) => dispatch(actions.leaveReview(revData, form, token)); \r\n  \r\n  // get states from tours to put in into options\r\n  const allTours = useSelector(state => state.tours.tours);\r\n  const statesFromTours = [...new Set(allTours.map(tour => tour.state))];\r\n  const states = statesFromTours.map(tour => {\r\n    return {name: tour};\r\n  });\r\n  // review form\r\n  const [agencyReviewForm, setAgencyReviewForm] = useState({\r\n    name: {\r\n      elementType: \"inputText\",\r\n      elementConfig: {\r\n        label: {\r\n          for: null\r\n        },\r\n        atributes: {\r\n          type: \"text\",\r\n          name: \"name\",\r\n          placeholder: \"Choose Name\"\r\n        },\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true\r\n      },\r\n      disabled: false,\r\n      touched: false,\r\n      valid: false\r\n    },\r\n    job: {\r\n      elementType: \"inputText\",\r\n      elementConfig: {\r\n        label: {\r\n          for: null\r\n        },\r\n        atributes: {\r\n          type: \"text\",\r\n          name: \"job\",\r\n          placeholder: \"Your Job\"\r\n        },\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true\r\n      },\r\n      disabled: false,\r\n      touched: false,\r\n      valid: false\r\n    },\r\n    travel1: {\r\n      id: \"travel1\",\r\n      elementType: \"select\",\r\n      elementConfig: {\r\n        label: {\r\n          for: \"travel1\",\r\n          name: \"Choose top 3 destinations\"\r\n        },\r\n        atributes: {\r\n          name: \"travel1\"\r\n        },\r\n        options: states\r\n      },\r\n      value: \"\",\r\n      defaultValue: \"country\",\r\n      validation: {\r\n        required: true\r\n      },\r\n      disabled: false,\r\n      touched: false,\r\n      valid: false\r\n    },\r\n    travel2: {\r\n      id: \"travel2\",\r\n      elementType: \"select\",\r\n      elementConfig: {\r\n        label: {\r\n          for: \"\",\r\n          name: \"\"\r\n        },\r\n        atributes: {\r\n          name: \"travel2\"\r\n        },\r\n        options: states\r\n      },\r\n      value: \"\",\r\n      defaultValue: \"country\",\r\n      validation: {\r\n        required: false\r\n      },\r\n      disabled: false,\r\n      touched: false,\r\n      valid: true\r\n    },\r\n    travel3: {\r\n      id: \"travel3\",\r\n      elementType: \"select\",\r\n      elementConfig: {\r\n        label: {\r\n          for: \"\",\r\n          name: \"\"\r\n        },\r\n        atributes: {\r\n          name: \"travel3\"\r\n        },\r\n        options: states\r\n      },\r\n      value: \"\",\r\n      defaultValue: \"country\",\r\n      validation: {\r\n        required: false\r\n      },\r\n      disabled: false,\r\n      touched: false,\r\n      valid: true\r\n    },\r\n    reviewText: {\r\n      elementType: \"textarea\",\r\n      elementConfig: {\r\n        label: {\r\n          for: \"review\",\r\n          name: \"Leave Your review here...\"\r\n        },\r\n        atributes: {\r\n          name: \"review\"\r\n        }\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true\r\n      },\r\n      disabled: false,\r\n      touched: false,\r\n      valid: false\r\n    },\r\n    rating: {\r\n      elementType: \"inputNumber\",\r\n      elementConfig: {\r\n        label: {\r\n          show: true,\r\n          for: \"rating\",\r\n          name: \"Rate our agency (with numbers 1 - 5)\"\r\n        },\r\n        atributes: {\r\n          type: \"number\",\r\n          name: \"rating\",\r\n          placeholder: \"\",\r\n          min: \"1\",\r\n          max: \"5\"\r\n        },\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minValue: 1,\r\n        maxValue: 5\r\n      },\r\n      disabled: false,\r\n      touched: false,\r\n      valid: false\r\n    }\r\n  });\r\n\r\n  const [tourReviewForm, setTourReviewForm] = useState({\r\n    name: {\r\n      elementType: \"inputText\",\r\n      elementConfig: {\r\n        label: {\r\n          for: null\r\n        },\r\n        atributes: {\r\n          type: \"text\",\r\n          name: \"name\",\r\n          placeholder: \"Choose Name\"\r\n        },\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true\r\n      },\r\n      disabled: false,\r\n      touched: false,\r\n      valid: false\r\n    },\r\n    job: {\r\n      elementType: \"inputText\",\r\n      elementConfig: {\r\n        label: {\r\n          for: null\r\n        },\r\n        atributes: {\r\n          type: \"text\",\r\n          name: \"job\",\r\n          placeholder: \"Your Job\"\r\n        },\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true\r\n      },\r\n      disabled: false,\r\n      touched: false,\r\n      valid: false\r\n    },\r\n    travel: {\r\n      id: \"travel\",\r\n      elementType: \"select\",\r\n      elementConfig: {\r\n        label: {\r\n          for: \"travel\",\r\n          name: \"Choose tour\"\r\n        },\r\n        atributes: {\r\n          name: \"travel\"\r\n        },\r\n        options: states\r\n      },\r\n      value: \"\",\r\n      defaultValue: \"country\",\r\n      validation: {\r\n        required: true\r\n      },\r\n      disabled: false,\r\n      touched: false,\r\n      valid: false\r\n    },\r\n    reviewText: {\r\n      elementType: \"textarea\",\r\n      elementConfig: {\r\n        label: {\r\n          for: \"review\",\r\n          name: \"Leave Your review here...\"\r\n        },\r\n        atributes: {\r\n          name: \"review\"\r\n        }\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true\r\n      },\r\n      disabled: false,\r\n      touched: false,\r\n      valid: false\r\n    },\r\n    rating: {\r\n      elementType: \"inputNumber\",\r\n      elementConfig: {\r\n        label: {\r\n          show: true,\r\n          for: \"rating\",\r\n          name: \"Rate selected tour (with numbers 1 - 5)\"\r\n        },\r\n        atributes: {\r\n          type: \"number\",\r\n          name: \"rating\",\r\n          placeholder: \"\",\r\n          min: \"1\",\r\n          max: \"5\"\r\n        },\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minValue: 1,\r\n        maxValue: 5\r\n      },\r\n      disabled: false,\r\n      touched: false,\r\n      valid: false\r\n    }\r\n  });\r\n\r\n  // check inputs validity\r\n  const checkInputValidity = (rules, value) => {\r\n    let isValid = true;\r\n    if(!rules) {\r\n      return true;\r\n    }\r\n    if(rules.required) {\r\n      isValid = value.trim() !== \"\" && isValid;\r\n    }\r\n    if(rules.minValue && rules.maxValue) {\r\n      isValid = parseInt(value) >= rules.minValue && parseInt(value) <= rules.maxValue && isValid;\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  // check valitidy when unfocused\r\n  const checkValidityAfterFocus = (element) => {\r\n    if(selectedForm === \"agencyReview\") {\r\n      setAgencyReviewForm(prevState => {\r\n        return {\r\n          ...prevState,\r\n          [element]: {\r\n            ...prevState[element],\r\n            touched: true\r\n          }\r\n        }\r\n      });\r\n    }\r\n    if(selectedForm === \"tourReview\") {\r\n      setTourReviewForm(prevState => {\r\n        return {\r\n          ...prevState,\r\n          [element]: {\r\n            ...prevState[element],\r\n            touched: true\r\n          }\r\n        }\r\n      });\r\n    } \r\n  };\r\n\r\n  // input changed handler\r\n  const agencyReviewInputsChangedHandler = (event, element) => {\r\n    setAgencyReviewForm(prevState => {\r\n      return {\r\n        ...prevState,\r\n        [element]: {\r\n          ...prevState[element],\r\n          value: event.target.value,\r\n          touched: true,\r\n          valid: checkInputValidity(prevState[element].validation, event.target.value)\r\n        }\r\n      }\r\n    });\r\n  };\r\n  const tourReviewInputsChangedHandler = (event, element) => {\r\n    setTourReviewForm(prevState => {\r\n      return {\r\n        ...prevState,\r\n        [element]: {\r\n          ...prevState[element],\r\n          value: event.target.value,\r\n          touched: true,\r\n          valid: checkInputValidity(prevState[element].validation, event.target.value)\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // forms valid ?\r\n  const [agencyReviewFormIsValid, setAgencyReviewFormIsValid] = useState(false);\r\n  const [tourReviewFormIsValid, setTourReviewFormIsValid] = useState(false);\r\n\r\n  // check form validity method\r\n  const checkFormValidity = (currentForm, setFormValidity) => {\r\n    let inputsValid = [];\r\n    for(const key in currentForm) {\r\n      inputsValid.push(currentForm[key].valid);\r\n    }\r\n    if(!inputsValid.includes(false)) {\r\n      setFormValidity(true)\r\n    } else {\r\n      setFormValidity(false)\r\n    }\r\n  };\r\n\r\n  // check validities with effect\r\n  useEffect(() => {\r\n    checkFormValidity(agencyReviewForm, setAgencyReviewFormIsValid);\r\n  }, [agencyReviewForm]);\r\n  useEffect(() => {\r\n    checkFormValidity(tourReviewForm, setTourReviewFormIsValid);\r\n  }, [tourReviewForm]);\r\n\r\n  // review form selected\r\n  const [selectedForm, setSelectedForm] = useState(\"agencyReview\");\r\n\r\n  // change form handler\r\n  const changeFormHandler = () => {\r\n    if(selectedForm === \"agencyReview\") {\r\n      setSelectedForm(\"tourReview\");\r\n    } else if(selectedForm === \"tourReview\") {\r\n      setSelectedForm(\"agencyReview\");\r\n    }\r\n  };\r\n\r\n  // prepare both forms' data\r\n  const agencyReviewFormData = [];\r\n  for(const element in agencyReviewForm) {\r\n    agencyReviewFormData.push({\r\n      id: element,\r\n      config: agencyReviewForm[element]\r\n    });\r\n  }\r\n\r\n  const tourReviewFormData = [];\r\n  for(const element in tourReviewForm) {\r\n    tourReviewFormData.push({\r\n      id: element,\r\n      config: tourReviewForm[element]\r\n    });\r\n  }\r\n\r\n  // display form depending on the selected form\r\n  const displayFormByMethod = (formElements,changedHandler) => {\r\n    let formDisplayed = formElements.map(el => {\r\n      const {id, config: {elementType, elementConfig, value, defaultValue, disabled, touched, valid, validation}} = el;\r\n      return <Input\r\n        key={id}\r\n        elementType={elementType}\r\n        elementConfig={elementConfig}\r\n        value={value}\r\n        defaultValue={defaultValue}\r\n        disabledInfo={disabled}\r\n        shouldValidate={validation.required}\r\n        inputTouched={touched}\r\n        inputValid={valid}\r\n        inputChanged={(event) => changedHandler(event, id)}\r\n        inputUnfocused={() => checkValidityAfterFocus(id)} />\r\n    })\r\n\r\n    return formDisplayed;\r\n  };\r\n\r\n  let formDisplayed;\r\n  let formValidity;\r\n  let formTitle;\r\n  if(selectedForm === \"agencyReview\") {\r\n    formDisplayed = displayFormByMethod(agencyReviewFormData, agencyReviewInputsChangedHandler);\r\n    formValidity = agencyReviewFormIsValid;\r\n    formTitle = \"Review agency\";\r\n  } else if(selectedForm === \"tourReview\") {\r\n    formDisplayed = displayFormByMethod(tourReviewFormData, tourReviewInputsChangedHandler);\r\n    formValidity = tourReviewFormIsValid;\r\n    formTitle = \"Review selected tour\";\r\n  }\r\n\r\n  // clear input fields\r\n  const clearInputFields = (form, setForm) => {\r\n    let updatedForm = {...form};\r\n    for(const key in updatedForm) {\r\n      updatedForm[key].value = \"\";\r\n      updatedForm[key].touched = false;\r\n      if(key !== \"travel2\" && key !== \"travel3\") {\r\n        updatedForm[key].valid = false;\r\n      }\r\n    }\r\n\r\n    setForm(updatedForm);\r\n  };\r\n\r\n  // form submit\r\n  const formSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    if(selectedForm === \"agencyReview\" && !agencyReviewExists) {\r\n      let formData = {\r\n        name: agencyReviewForm.name.value,\r\n        job: agencyReviewForm.job.value,\r\n        tours: [agencyReviewForm.travel1.value, agencyReviewForm.travel2.value, agencyReviewForm.travel3.value],\r\n        review: agencyReviewForm.reviewText.value,\r\n        rating: agencyReviewForm.rating.value,\r\n        userId: userID\r\n      };\r\n      onLeaveReview(formData, selectedForm, isAuth);\r\n      clearInputFields(agencyReviewForm, setAgencyReviewForm);\r\n    } else if(selectedForm === \"agencyReview\" && agencyReviewExists) {\r\n      setAgencyReviewExistsError(true);\r\n    } else {\r\n      let formData = {\r\n        name: tourReviewForm.name.value,\r\n        job: tourReviewForm.job.value,\r\n        tour: tourReviewForm.travel.value,\r\n        review: tourReviewForm.reviewText.value,\r\n        rating: tourReviewForm.rating.value,\r\n        userId: userID\r\n      }\r\n      onLeaveReview(formData, selectedForm, isAuth);\r\n      clearInputFields(tourReviewForm, setTourReviewForm);\r\n    }\r\n    showRedirectModal();\r\n  };\r\n\r\n  // fetch agency reviews again when hiding redirect modal, to get the newest state\r\n  const hideRedirectModalAndFetchAgencyReview = () => {\r\n    onFetchAgencyReview(isAuth, userID);\r\n    hideRedirectModal();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(isError !== null || agencyReviewExistsError) {\r\n      hideRedirectModal();\r\n    }\r\n  }, [isError, agencyReviewExistsError, hideRedirectModal]);\r\n  \r\n  let actualForm = (\r\n    <Form\r\n      formClassname=\"leave-review\"\r\n      signUpButtonShown={null}\r\n      formIsValid={formValidity}\r\n      formBtnText=\"leave review\"\r\n      formSubmitHandler={formSubmitHandler}>\r\n      {formDisplayed}\r\n    </Form>\r\n  );\r\n  if(isAuth === null) {\r\n    actualForm = (\r\n      <>\r\n        <p style={{textAlign: \"center\", fontSize:\"2rem\", marginTop: \"2rem\"}}>Sign up or Log in to leave review</p>\r\n        <Link to=\"/signup\" style={{fontSize: \"1.9rem\", textTransform: \"uppercase\", width: \"10rem\", margin: \"2rem auto\", padding: \"0.7rem 0\", backgroundColor: \"orange\", color: \"white\", textAlign: \"center\"}}>do it</Link>\r\n      </>\r\n    );\r\n  }\r\n  if(isLoading) {\r\n    actualForm = <Spinner />;\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <RedirectModal\r\n        redirectModalShow={redirectModalShow}\r\n        redirectModalTitle=\"Review sent succesfully\"\r\n        redirectModalClosed={hideRedirectModalAndFetchAgencyReview} />\r\n      <ErrorModal\r\n        errorModalShow={isError !== null || agencyReviewExistsError}\r\n        errorModalClosed={isError !== null ? onLeaveReviewClearError : () => setAgencyReviewExistsError(false)}\r\n        errorModalMsg={isError ? \"Can't send review. Try again later, or try refreshing the page.\" : \"You already reviewed our agency. To add new review, delete the existing one in Your Page.\"} />\r\n      <SectionTitle\r\n        titleClassname=\"leave-review\"\r\n        icon={<VscPreview />}\r\n        titleText=\"add your review\"\r\n        titleAdditional=\"be gentle\"  />\r\n      <section className=\"leave-review__content\">\r\n        <p className=\"leave-review__text\">\r\n          Fill all the fields and leave your review. \r\n          <br />\r\n          <span style={{color: \"red\"}}>NOTE: </span>\r\n          You can only add one review about our tour agency, but you can, off course delete it and add new one, or edit the existing one.\r\n          <br />\r\n          For individual travels you can add one review for each.\r\n        </p>\r\n        <article className=\"leave-review__form\">\r\n          <h3 className=\"leave-review__form-title\" style={{display: isAuth ? \"block\" : \"none\"}}>\r\n            {formTitle}\r\n          </h3>\r\n          {actualForm}\r\n          <button \r\n            className=\"leave-review__switch-btn\"\r\n            style={{display: isAuth ? \"block\" : \"none\"}}\r\n            onClick={changeFormHandler}>\r\n            {selectedForm === \"agencyReview\" ? \"switch to review single tour\" : \"switch to review our agency\"}\r\n          </button>\r\n        </article>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LeaveReview;\r\n"],"sourceRoot":""}