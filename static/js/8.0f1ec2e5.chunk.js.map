{"version":3,"sources":["components/UI/ErrorModal/ErrorModal.js","components/UI/Spinner/Spinner.js","components/YourPage/SingleTourBooked/SingleTourBooked.js","components/YourPage/RequestedTour/RequestedTour.js","components/YourPage/YourReview/YourReview.js","pages/YourPage/YourPage.js"],"names":["ErrorModal","props","show","errorModalShow","backdropClicked","errorModalClosed","mountOnEnter","unmountOnExit","in","timeout","classNames","className","errorModalMsg","type","onClick","Spinner","SingleTourBooked","tourIcon","tourContinent","tourState","tourCities","map","city","index","tourPrice","tourDiscount","tourDays","tourDate","tourMeditation","tourMeditationParticipation","style","backgroundImage","tourImg","tourPrepareDelete","tourDelBtnText","React","memo","RequestedTour","countryCountry","countryState","countryCity","code","countryCode","deleteQuestion","YourReview","yourReviewClassname","yourReviewTitle","yourReviewName","yourReviewJob","yourReviewTours","tour","display","toUpperCase","yourReviewText","yourReviewRating","deleteReviewQuestion","YourPage","userToken","useSelector","state","auth","token","userID","useQuestionModal","questionModalData","showQuestionModal","closeQuestionModal","dispatch","useDispatch","authIsLoading","loading","authIsError","error","onGetAdditionalUserInfo","useCallback","userId","actions","fetchToursIsLoading","toursFetching","fetchToursIsError","deleteTourIsError","deleteError","onFetchTours","fetchRequestToursIsLoading","requestTour","deleteReqTourIsError","fetchRequestToursIsError","fetchError","onFetchRequestedTours","onFetchAgencyReview","OnFetchTourReviews","useEffect","userInfo","pastTours","presentTours","futureTours","agencyReview","reviews","tourReviews","agencyReviewIsLoading","fetchAgencyReviewLoading","toursReviewIsLoading","fetchTourReviewsLoading","agencyReviewIsError","fetchAgencyRevewError","tourReviewsIsError","fetchTourReviewsError","onRemoveAgencyReview","deleteReviewError","revId","onRemoveTourReview","requestedTours","useState","clearAllToursType","setClearAllToursType","onReqTourDelete","tourId","onReqToursClearAll","reqTourDeleteId","setReqTourDeleteId","onDeleteSingleTour","tourDeleteID","setTourDeleteId","onClearTours","tourStatus","targetedTourList","targetToursStatus","setTargetToursStatus","targetedTours","setTargetedTours","reviewType","setReviewType","tourRevId","setTourRevId","revType","displayToursHandler","tourList","displayIcon","continent","cities","displayImg","price","days","meditation","meditationParticipation","discount","status","questionTitle","questionText","deleteTourQuestion","id","noToursText","textAlign","fontSize","textTransform","errorFetchingText","color","displayTourBoxesHandler","fetchedTours","tourBoxTitle","displayedTours","length","targetTours","clearAllToursQuestion","requestedToursDisplayed","country","reqTourId","agencyReviewDisplayed","tourReviewsDisplayed","userInfoDisplayed","noReviewesText","reviewsLoadErrorText","name","job","tours","review","rating","firstName","lastName","email","phone","marginBottom","SectionTitle","titleClassname","icon","titleText","titleAdditional","QuestionModal","questionModalShow","questionModalTitle","title","questionModalText","text","questionModalCancel","questionModalConfirm","bookedTourId","confirmQuestionModal","fontWeight"],"mappings":"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","file":"static/js/8.0f1ec2e5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './error-modal.scss';\r\nimport '../../../sass-additions/helper-classes.scss';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport CSSTransition from 'react-transition-group/CSSTransition';\r\n\r\nconst ErrorModal = props => {\r\n  return (\r\n    <>\r\n      <Backdrop\r\n        show={props.errorModalShow}\r\n        backdropClicked={props.errorModalClosed} />\r\n      <CSSTransition\r\n        mountOnEnter\r\n        unmountOnExit\r\n        in={props.errorModalShow}\r\n        timeout={300}\r\n        classNames=\"show\">\r\n        <div className=\"error-modal\">\r\n          <p className=\"error-modal__title\">\r\n            Error occured\r\n          </p>\r\n          <p className=\"error-modal__message\">\r\n            {props.errorModalMsg}\r\n          </p>\r\n          <button \r\n            type=\"button\"\r\n            className=\"error-modal__btn\"\r\n            onClick={props.errorModalClosed}>\r\n              OK\r\n            </button>\r\n        </div>\r\n      </CSSTransition>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ErrorModal\r\n","import React from 'react';\r\nimport './spinner.scss';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"spinner\">\r\n      loading...\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport './single-tour-booked.scss';\r\n\r\nconst SingleTourBooked = props => {\r\n  return (\r\n    <div className=\"single-tour-booked\">\r\n      <div className=\"single-tour-booked__title\">\r\n        <div className=\"single-tour-booked__title-icon\">\r\n          {props.tourIcon}\r\n        </div>\r\n        <p className=\"single-tour-booked__title-continent\">\r\n          {/* {tour.continent} */}\r\n          {props.tourContinent}\r\n        </p>\r\n      </div>\r\n      <div className=\"single-tour-booked__info\">\r\n        <div className=\"single-tour-booked__info-text\">\r\n          <p><span>State: </span>{props.tourState}</p>\r\n          <p><span>Cities you visited:</span></p>\r\n          <ul>\r\n            {props.tourCities.map((city, index) => {\r\n              return <li key={index}> - {city}</li>\r\n            })}\r\n          </ul>\r\n          <p><span>price payed:</span> ${props.tourPrice}</p>\r\n          <p><span>discounts: </span>{props.tourDiscount || \"none\"}</p>\r\n          <p><span>days stayed:</span> {props.tourDays}</p>\r\n          <p><span>visit period:</span> {props.tourDate}</p>\r\n          {props.tourMeditation === \"with\" && (\r\n            <p><span>parcipitates in meditation: </span>{props.tourMeditationParticipation}</p>\r\n          )}\r\n        </div>\r\n        <div className=\"single-tour-booked__info-img\" style={{backgroundImage: `url(${props.tourImg})`}}></div>\r\n      </div>\r\n      <button \r\n        className=\"single-tour-booked__delete-btn\"onClick={props.tourPrepareDelete}>\r\n        {props.tourDelBtnText}\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(SingleTourBooked);\r\n","import React from 'react';\r\nimport './requested-tour.scss';\r\nimport Flag from 'react-world-flags';\r\n\r\nconst RequestedTour = props => {\r\n  return (\r\n    <div className=\"requested-tour\">\r\n      <h3 className=\"requested-tour__title\">\r\n        You requested:\r\n      </h3>\r\n      <div className=\"requested-tour__flex\">\r\n      <div className=\"requested-tour__content\">\r\n        <div className=\"requested-tour__info\">\r\n          <p><span>Country: </span>{props.countryCountry}</p>\r\n          <p><span>State: </span>{props.countryState}</p>\r\n          <p><span>City: </span>{props.countryCity}</p>\r\n        </div>\r\n        <div className=\"requested-tour__flag\">\r\n          <Flag code={props.countryCode} />\r\n        </div>\r\n      </div>\r\n      <button \r\n        className=\"requested-tour__delete\"\r\n        onClick={props.deleteQuestion}>\r\n        delete request\r\n      </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(RequestedTour);\r\n","import React from 'react';\r\nimport './your-review.scss';\r\n\r\nconst YourReview = props => {\r\n  return (\r\n    <div className={`your-review your-review__${props.yourReviewClassname}`}>\r\n      <h3 className=\"your-review__title\">\r\n        {props.yourReviewTitle}\r\n      </h3>\r\n      <div className=\"your-review__data\">\r\n        <p className=\"your-review__data-item\">\r\n          <span>Chosen Name: </span>{props.yourReviewName}\r\n        </p>\r\n        <p className=\"your-review__data-item\">\r\n          <span>Job: </span>{props.yourReviewJob}\r\n        </p>\r\n        <p className=\"your-review__data-item\">\r\n          <span>You visited:</span>\r\n        </p>\r\n        <ul className=\"your-review__data-list\">\r\n          {props.yourReviewClassname === \"agency\" && props.yourReviewTours ?  props.yourReviewTours.map((tour, index) => {\r\n            return (\r\n              <li key={index} style={{display: tour === \"\" ? \"none\" : \"block\"}}>\r\n                - {tour.toUpperCase()}\r\n              </li>\r\n            );\r\n          }) : <li>{props.yourReviewTours.toUpperCase()}</li>}\r\n        </ul>\r\n        <p className=\"your-review__data-item\"><span>Your review: </span>{props.yourReviewText}</p>\r\n        <p className=\"your-review__data-item\"><span>Rated: </span>{props.yourReviewRating}/5</p>\r\n      </div>\r\n      <button \r\n        className=\"your-review__remove-btn\"\r\n        onClick={props.deleteReviewQuestion}>\r\n        remove review\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(YourReview);\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport './your-page.scss';\r\nimport SectionTitle from '../../components/SectionTitle/SectionTitle';\r\nimport SingleTourBooked from '../../components/YourPage/SingleTourBooked/SingleTourBooked';\r\nimport RequestedTour from '../../components/YourPage/RequestedTour/RequestedTour';\r\nimport YourReview from '../../components/YourPage/YourReview/YourReview';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport QuestionModal from '../../components/UI/QuestionModal/QuestionModal';\r\nimport ErrorModal from '../../components/UI/ErrorModal/ErrorModal';\r\nimport { BsPersonFill, BsClockHistory,BsPerson } from 'react-icons/bs';\r\nimport { AiOutlinePullRequest } from 'react-icons/ai';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\nimport { useQuestionModal } from '../../custom-hooks/useQuestionModal';\r\n\r\nconst YourPage = () => {\r\n  const userToken = useSelector(state => state.auth.token);\r\n  const userID = useSelector(state => state.auth.userID);\r\n  // use question modal\r\n  const { questionModalData, showQuestionModal, closeQuestionModal } = useQuestionModal();\r\n  \r\n  const dispatch = useDispatch();\r\n  // auth loading\r\n  const authIsLoading = useSelector(state => state.auth.loading);\r\n  // auth error\r\n  const authIsError = useSelector(state => state.auth.error);\r\n  // get user info\r\n  const onGetAdditionalUserInfo = useCallback((token, userId) => dispatch(actions.getAdditionalUserInfo(token, userId)), [dispatch]);\r\n  // fetch tours loading state\r\n  const fetchToursIsLoading = useSelector(state => state.toursFetching.loading);\r\n  // fetch tours error state\r\n  const fetchToursIsError = useSelector(state => state.toursFetching.error);\r\n  // delete tour error\r\n  const deleteTourIsError = useSelector(state => state.toursFetching.deleteError);\r\n  // clear delete tour error\r\n  const onClearDeleteTourError = () => dispatch(actions.clearDeleteTourError());\r\n  // fetch tours\r\n  const onFetchTours = useCallback((token, userId) => dispatch(actions.fetchTours(token, userId)), [dispatch]);\r\n  \r\n  // fetch request tours loading state\r\n  const fetchRequestToursIsLoading = useSelector(state => state.requestTour.loading);\r\n  // delete/clear req tour(s) error\r\n  const deleteReqTourIsError = useSelector(state => state.requestTour.deleteError);\r\n  // fetch request tours error state\r\n  const fetchRequestToursIsError = useSelector(state => state.requestTour.fetchError);\r\n  // fetch request tours\r\n  // clear requ tour delete error\r\n  const onClearDeleteReqTourError = () => dispatch(actions.clearReqTourDeleteError());\r\n  const onFetchRequestedTours = useCallback((token, userId) => dispatch(actions.fetchReqTours(token, userId)), [dispatch]);\r\n\r\n  // fetch reviews actions\r\n  const onFetchAgencyReview = useCallback((token, userId) => dispatch(actions.fetchAgencyReview(token, userId)), [dispatch]);\r\n  const OnFetchTourReviews = useCallback((token, userId) => dispatch(actions.fetchTourReviews(token, userId)), [dispatch]);\r\n  // fetch tours, requested and reviews tours on mount\r\n  useEffect(() => {\r\n    onFetchTours(userToken, userID);\r\n    onFetchRequestedTours(userToken, userID);\r\n    onFetchAgencyReview(userToken, userID);\r\n    OnFetchTourReviews(userToken, userID);\r\n    onGetAdditionalUserInfo(userToken, userID);\r\n  }, [onFetchTours,onFetchRequestedTours,onFetchAgencyReview, OnFetchTourReviews, onGetAdditionalUserInfo, userToken, userID]);\r\n\r\n  // fetched user info\r\n  const userInfo = useSelector(state => state.auth.userInfo);\r\n\r\n  // fetched tours from state\r\n  const pastTours = useSelector(state => state.toursFetching.pastTours);\r\n  const presentTours = useSelector(state => state.toursFetching.presentTours);\r\n  const futureTours = useSelector(state => state.toursFetching.futureTours);\r\n  \r\n  // reviews from state\r\n  const agencyReview = useSelector(state => state.reviews.agencyReview);\r\n  const tourReviews = useSelector(state => state.reviews.tourReviews);\r\n  // reviews loadings and errors\r\n  const agencyReviewIsLoading = useSelector(state => state.reviews.fetchAgencyReviewLoading);\r\n  const toursReviewIsLoading = useSelector(state => state.reviews.fetchTourReviewsLoading);\r\n  const agencyReviewIsError = useSelector(state => state.reviews.fetchAgencyRevewError);\r\n  const tourReviewsIsError = useSelector(state => state.reviews.fetchTourReviewsError);\r\n  const deleteReviewsIsError = useSelector(state => state.reviews.deleteReviewError);\r\n\r\n  // deleting reviews\r\n  const onRemoveAgencyReview = (revId, token) => dispatch(actions.removeAgencyReview(revId, token));\r\n  const onRemoveTourReview = (revId, token) => dispatch(actions.removeTourReview(revId, token));\r\n\r\n  // fetched requested tours from state\r\n  const requestedTours = useSelector(state => state.requestTour.requestedTours);\r\n\r\n  // setting clear all tours state\r\n  const [clearAllToursType, setClearAllToursType] = useState(\"\");\r\n  // deleting requested tour\r\n  const onReqTourDelete = (tourId, token) => dispatch(actions.reqTourDelete(tourId, token));\r\n  // deleting all requested tours\r\n  const onReqToursClearAll = (token) => dispatch(actions.reqToursClearAll(token));\r\n  // store target requested tour id\r\n  const [reqTourDeleteId, setReqTourDeleteId] = useState(null);\r\n  // set target req tour id when showing quest.modal\r\n  const deleteReqTourQuestion = (reqTourId) => {\r\n    showQuestionModal(\"cancelling request\", \"Are you sure you want to cancel this request?\");\r\n    setReqTourDeleteId(reqTourId);\r\n  };\r\n  // clear all req tours question\r\n  const clearAllReqToursQuestion = () => {\r\n    setClearAllToursType(\"reqTours\");\r\n    showQuestionModal(\"deleting all requests\", \"Are you sure you want to delete all your requested tours?\");\r\n  };\r\n\r\n  // deleting single tour\r\n  const onDeleteSingleTour = (tourId, token) => dispatch(actions.deleteSingleTour(tourId, token));\r\n  // store target tour id\r\n  const [tourDeleteID, setTourDeleteId] = useState(null);\r\n  // set target tour id when showing quest.modal\r\n  const deleteTourQuestion = (tourId, status) => {\r\n    let questionTitle, questionText;\r\n    if(status === \"past\" || status === \"present\") {\r\n      questionTitle = \"removing tour from history\";\r\n      questionText = \"Are you sure you want to remove this tour from history? Beware that if you do that, you won't get discounts while booking via website for future tours, since our dicounts system rellies of your touring history. To get discounts, you will need to call us directly.\"\r\n    } else if(status === \"future\") {\r\n      questionTitle = \"cancelling tour\";\r\n      questionText = \"Are you sure you want to cancel this tour?\";\r\n    }\r\n    showQuestionModal(questionTitle, questionText);\r\n    setTourDeleteId(tourId);\r\n  };\r\n\r\n  // clear all tours from particular box\r\n  const onClearTours = (tourStatus, targetedTourList, token) => dispatch(actions.clearTours(tourStatus, targetedTourList, token));\r\n  // get target tours status\r\n  const [targetToursStatus, setTargetToursStatus] = useState(\"\");\r\n  // get targeted tours\r\n  const [targetedTours, setTargetedTours] = useState(null);\r\n  // clear all tours question\r\n  const clearAllToursQuestion = (targetTours) => {\r\n    setTargetedTours(targetTours);\r\n    let questionTitle, questionText;\r\n    if(targetTours === pastTours) {\r\n      questionTitle = \"clearing past touring history\";\r\n      questionText = \"Are you sure you want to clear all past touring history? Beware that if you do that, you won't get discounts while booking via website for future tours, since our dicounts system rellies of your touring history. To get discounts, you will need to call us directly.\"\r\n    } else if(targetTours === presentTours) {\r\n      questionTitle = \"clearing present touring history\";\r\n      questionText = \"Are you sure you want to clear all present touring history? Beware that if you do that, you won't get discounts while booking via website for future tours, since our dicounts system rellies of your touring history. To get discounts, you will need to call us directly.\"\r\n    } else if(targetTours === futureTours) {\r\n      questionTitle = \"cancelling all booked tours\";\r\n      questionText = \"Are you sure you want to cancel all of your booked tours?\";\r\n    }\r\n    setTargetToursStatus(targetTours[0].status);\r\n    setClearAllToursType(\"bookedTours\");\r\n    showQuestionModal(questionTitle, questionText);\r\n  };\r\n\r\n  // reviews deleting data\r\n  const [reviewType, setReviewType] = useState(null);\r\n  const [tourRevId, setTourRevId] = useState(null);\r\n  // delete review question\r\n  const deleteReviewQuestion = (revType = null, revId = null) => {\r\n    if(revId !== null && revType === null) {\r\n      setTourRevId(revId);\r\n    }\r\n    if(revId === null && revType !== null) {\r\n      setReviewType(revType);\r\n    }\r\n    \r\n    showQuestionModal(\"deleting review\", \"Are you sure you want to delete this review?\");\r\n  };\r\n  // cancel question modal\r\n  const cancelQuestionModal = () => {\r\n    setReqTourDeleteId(null);\r\n    setTourDeleteId(null);\r\n    setClearAllToursType(\"\");\r\n    closeQuestionModal();\r\n    setTargetToursStatus(\"\");\r\n    setReviewType(null);\r\n    setTourRevId(null);\r\n    setTargetedTours(null);\r\n  };\r\n  // confirm req tour deletion\r\n  const confirmQuestionModal = (reqTourId = null, bookedTourId = null, tourStatus = null, targetedTourList = null, revType = null, revId = null) => {\r\n    if(reqTourId !== null && bookedTourId === null && clearAllToursType === \"\" && revType === null && revId === null) {\r\n      onReqTourDelete(reqTourId, userToken);\r\n    } else if(reqTourId === null && bookedTourId !== null && clearAllToursType === \"\" && revType === null && revId === null) {\r\n      onDeleteSingleTour(bookedTourId, userToken);\r\n    } else if(reqTourId === null && bookedTourId === null && clearAllToursType === \"reqTours\" && revType === null && revId === null) {\r\n      onReqToursClearAll(userToken);\r\n    } else if(reqTourId === null && bookedTourId === null && clearAllToursType === \"bookedTours\" && revType === null && revId === null) {\r\n      onClearTours(tourStatus, targetedTourList, userToken);\r\n    } else if(reqTourId === null && bookedTourId === null && clearAllToursType === \"\" && revType === \"agencyRev\" && revId === null) {\r\n      onRemoveAgencyReview(null, userToken);\r\n    } else if(reqTourId === null && bookedTourId === null && clearAllToursType === \"\" && revType === null && revId !== null) {\r\n      onRemoveTourReview(revId, userToken);\r\n    }\r\n    setReqTourDeleteId(null);\r\n    setTourDeleteId(null);\r\n    setClearAllToursType(\"\");\r\n    closeQuestionModal();\r\n    setTargetToursStatus(\"\");\r\n    setReviewType(null);\r\n    setTourRevId(null);\r\n    setTargetedTours(null);\r\n  };\r\n\r\n  // display tours function\r\n  const displayToursHandler = (tourList) => {\r\n    let displayedTours = tourList.map(tour => {\r\n      \r\n      return <SingleTourBooked\r\n        key={tour.id}\r\n        tourIcon={tour.displayIcon}\r\n        tourContinent={tour.continent}\r\n        tourState={tour.state}\r\n        tourCities={tour.cities}\r\n        tourImg={tour.displayImg}\r\n        tourPrice={tour.price}\r\n        tourDays={tour.days}\r\n        tourDate={tour.tourDate}\r\n        tourMeditation={tour.meditation}\r\n        tourMeditationParticipation={tour.meditationParticipation}\r\n        tourDiscount={tour.discount}\r\n        tourDelBtnText={tourList === futureTours ? \"cancel this tour\" : \"remove from history\"}\r\n        tourPrepareDelete={() => deleteTourQuestion(tour.id, tour.status)} />\r\n    });\r\n    return displayedTours;\r\n  };\r\n\r\n  let noToursText = <p style={{textAlign: \"center\", fontSize: \"2rem\", textTransform: \"uppercase\"}}>no tours yet</p>;\r\n  let errorFetchingText = <p style={{textAlign: \"center\", fontSize: \"2rem\", textTransform: \"uppercase\", color: \"red\"}}>can't load tours. try refreshing the page, or try again latter</p>;\r\n\r\n  // display tourboxes function\r\n  const displayTourBoxesHandler = (fetchedTours, tourBoxTitle) => {\r\n\r\n    let displayedTours = displayToursHandler(fetchedTours);\r\n    if(fetchedTours && fetchedTours.length !== 0) {\r\n      displayedTours = displayToursHandler(fetchedTours);\r\n    } \r\n    if(fetchedTours.length === 0) {\r\n      displayedTours = noToursText;\r\n    }\r\n    if(fetchToursIsLoading) {\r\n      displayedTours = <Spinner />;\r\n    }\r\n    if(fetchToursIsError) {\r\n      displayedTours = errorFetchingText;\r\n    }\r\n\r\n    let tourBox = (\r\n      <div className=\"your-page__tours-section\">\r\n        <h3>{tourBoxTitle}</h3>\r\n        <div className={fetchToursIsLoading || fetchedTours.length === 0 || fetchToursIsError !== null ? \"your-page__tours-toursbox tourbox-disp-block\" : \"your-page__tours-toursbox\"}>\r\n          {displayedTours}\r\n        </div>\r\n        <button className=\"your-page__clear-all-btn\" style={{display: fetchedTours.length === 0 ? \"none\" : \"block\"}} onClick={() => clearAllToursQuestion(fetchedTours)}>\r\n          {fetchedTours === futureTours ? \"cancel all booked tours\" : \"clear all tours\"}\r\n        </button>\r\n      </div>\r\n    );\r\n\r\n    return tourBox;\r\n  }\r\n\r\n  // displayed requested tours\r\n  let requestedToursDisplayed = requestedTours.map(tour => {\r\n    return <RequestedTour\r\n        key={tour.id}\r\n        countryCode={tour.code}\r\n        countryCountry={tour.country}\r\n        countryState={tour.state === \"\" ? \"---\" : tour.state}\r\n        countryCity={tour.city === \"\" ? \"---\" : tour.city}\r\n        deleteQuestion={() => deleteReqTourQuestion(tour.id)} />\r\n  });\r\n  \r\n  if(fetchRequestToursIsLoading) {\r\n    requestedToursDisplayed = <Spinner />;\r\n  }\r\n  if(requestedTours.length === 0) {\r\n    requestedToursDisplayed = noToursText;\r\n  }\r\n  if(fetchRequestToursIsError) {\r\n    requestedToursDisplayed = errorFetchingText;\r\n  }\r\n\r\n  let noReviewesText = <p style={{textAlign: \"center\", fontSize: \"2rem\", textTransform: \"uppercase\"}}>no reviews yet</p>;\r\n  let reviewsLoadErrorText = <p style={{textAlign: \"center\", fontSize: \"2rem\", textTransform: \"uppercase\", color: \"red\"}}>can't load reviews. try refreshing the page, or try again latter</p>;\r\n\r\n  // display agency tour\r\n  let agencyReviewDisplayed;\r\n  if(agencyReview !== null) {\r\n    agencyReviewDisplayed = <YourReview\r\n        yourReviewClassname=\"agency\"\r\n        yourReviewTitle=\"your opinion of us\"\r\n        yourReviewName={agencyReview.name}\r\n        yourReviewJob={agencyReview.job}\r\n        yourReviewTours={agencyReview.tours}\r\n        yourReviewText={agencyReview.review}\r\n        yourReviewRating={agencyReview.rating}\r\n        deleteReviewQuestion={() => deleteReviewQuestion(\"agencyRev\", null)} />;\r\n  }\r\n  if(agencyReviewIsLoading) {\r\n    agencyReviewDisplayed = <Spinner />;\r\n  }\r\n  if(agencyReview === null) {\r\n    agencyReviewDisplayed = noReviewesText;\r\n  }\r\n  if(agencyReviewIsError) {\r\n    agencyReviewDisplayed = reviewsLoadErrorText;\r\n  }\r\n\r\n  // display tours reviews\r\n  let tourReviewsDisplayed;\r\n  if(tourReviews) {\r\n    tourReviewsDisplayed = tourReviews.map(tour => {\r\n      return <YourReview\r\n        key={tour.id}\r\n        yourReviewClassname=\"tours\"\r\n        yourReviewTitle=\"single tour review\"\r\n        yourReviewName={tour.name}\r\n        yourReviewJob={tour.job}\r\n        yourReviewTours={tour.tour}\r\n        yourReviewText={tour.review}\r\n        yourReviewRating={tour.rating}\r\n        deleteReviewQuestion={() => deleteReviewQuestion(null, tour.id)} />\r\n    })\r\n  }\r\n  if(tourReviews.length === 0) {\r\n    tourReviewsDisplayed = noReviewesText\r\n  }\r\n  if(toursReviewIsLoading) {\r\n    tourReviewsDisplayed = <Spinner />;\r\n  }\r\n  if(tourReviewsIsError) {\r\n    tourReviewsDisplayed = reviewsLoadErrorText;\r\n  }\r\n\r\n  let userInfoDisplayed;\r\n  if(userInfo !== null) {\r\n    userInfoDisplayed = (\r\n      <>\r\n        <ul className=\"your-page__user-info-list\">\r\n          <li className=\"your-page__user-info-item\">\r\n            <span>Full name: </span>{userInfo.firstName} {userInfo.lastName}\r\n          </li>\r\n          <li className=\"your-page__user-info-item\">\r\n            <span>Email: </span>{userInfo.email}\r\n          </li>\r\n          <li className=\"your-page__user-info-item\">\r\n            <span>Country: </span>{userInfo.country}\r\n          </li>\r\n          <li className=\"your-page__user-info-item\">\r\n            <span>City: </span>{userInfo.city}\r\n          </li>\r\n          <li className=\"your-page__user-info-item\">\r\n            <span>Phone: </span>{userInfo.phone}\r\n          </li>\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n  if(!userInfo) {\r\n    userInfoDisplayed = <p>no info to show</p>;\r\n  }\r\n  if(authIsLoading) {\r\n    userInfoDisplayed = <Spinner />;\r\n  }\r\n  if(authIsError) {\r\n    userInfoDisplayed = <p style={{textAlign: \"center\", fontSize: \"2rem\", textTransform: \"uppercase\", color: \"red\", marginBottom: \"2rem\"}}>your info should be here, but it can't be loaded right now. try refreshing the page</p>\r\n  }\r\n  return (\r\n    <>\r\n      <SectionTitle\r\n        titleClassname=\"your-page\"\r\n        icon={<BsPersonFill />}\r\n        titleText=\"your page\"\r\n        titleAdditional=\"all your activities\" />\r\n      {/* modals for tours managing */}\r\n      <QuestionModal\r\n        questionModalShow={questionModalData.show}\r\n        questionModalTitle={questionModalData.title}\r\n        questionModalText={questionModalData.text}\r\n        questionModalCancel={cancelQuestionModal}\r\n        questionModalConfirm={() => confirmQuestionModal(reqTourDeleteId, tourDeleteID, targetToursStatus, targetedTours, reviewType, tourRevId)} />\r\n      <ErrorModal\r\n        errorModalShow={deleteReqTourIsError !== null || deleteTourIsError !== null}\r\n        errorModalMsg={deleteReqTourIsError !== null || deleteTourIsError !== null ? \"Can't perform action at the moment. Try later.\" : null}\r\n        errorModalClosed={deleteReqTourIsError !== null ? onClearDeleteReqTourError : onClearDeleteTourError} />\r\n      {/* modals for reviews managing */}\r\n      <section className=\"your-page__content\">\r\n        <p className=\"your-page__text\">\r\n          Hello {userInfo !== null ? <span style={{fontWeight: \"bold\", color: \"red\"}}>{userInfo.firstName}</span> : \"user\"}! This is your personal page. Here you can find all your activities on our website. Your touring history is here - your past, present and future tours.\r\n          Also, here you can find the tours the you have requested, if you requested any. Plus, if you left reviews, you can find them here.\r\n        </p>\r\n        <article className=\"your-page__user-info\">\r\n          <div className=\"your-page__tours-title\">\r\n            <BsPerson className=\"your-page__tours-title__icon\"/>\r\n            <p className=\"your-page__tours-title__text\">your info</p>\r\n          </div>\r\n          {userInfoDisplayed}\r\n        </article>\r\n        {/* past, present and future tours */}\r\n        <article className=\"your-page__tours\">\r\n          <div className=\"your-page__tours-title\">\r\n            <BsClockHistory className=\"your-page__tours-title__icon\"/>\r\n            <p className=\"your-page__tours-title__text\">your touring history</p>\r\n          </div>\r\n          {/* past tours */}\r\n          <>\r\n            {displayTourBoxesHandler(pastTours, \"Past Tours\")}\r\n          </>\r\n          {/* present tours */}\r\n          <>\r\n            {displayTourBoxesHandler(presentTours, \"Current Tours\")}\r\n          </>\r\n          {/* past tours */}\r\n          <>\r\n            {displayTourBoxesHandler(futureTours, \"Upcoming Tours\")}\r\n          </>\r\n        </article>\r\n        {/* requested tours */}\r\n        <article className=\"your-page__requests\">\r\n          <div className=\"your-page__tours-title\">\r\n            <AiOutlinePullRequest className=\"your-page__tours-title__icon\"/>\r\n            <p className=\"your-page__tours-title__text\">tours you requested</p>\r\n          </div>\r\n          <div className={fetchRequestToursIsLoading || requestedTours.length === 0 || fetchRequestToursIsError !== null ? \"your-page__requests-tours tourbox-disp-block\" : \"your-page__requests-tours\"}>\r\n            {/* single tours */}\r\n            {requestedToursDisplayed}\r\n            <button \r\n              className=\"your-page__clear-all-btn\"\r\n              style={{display: requestedTours.length === 0 || fetchRequestToursIsError !== null ? \"none\" : \"block\"}}\r\n              onClick={clearAllReqToursQuestion}>\r\n              delete all requests\r\n            </button>\r\n          </div>\r\n        </article>\r\n        {/* reviews */}\r\n        <article className=\"your-page__reviews\">\r\n          <div className=\"your-page__tours-title\">\r\n            <AiOutlinePullRequest className=\"your-page__tours-title__icon\"/>\r\n            <p className=\"your-page__tours-title__text\">your reviews</p>\r\n          </div>\r\n          <div className=\"your-page__reviews-reviews your-page__reviews-reviews--agency\">\r\n            {/* reviews */}\r\n            <div className=\"your-page__reviews-reviews__agency\">\r\n              <h3 className=\"your-page__reviews-reviews__title\">\r\n                Agency review\r\n              </h3>\r\n              {agencyReviewDisplayed}\r\n            </div>\r\n          </div>\r\n          <div className=\"your-page__reviews-reviews your-page__reviews-reviews--tours\">\r\n            {/* reviews */}\r\n            <div className=\"your-page__reviews-reviews__agency\">\r\n              <h3 className=\"your-page__reviews-reviews__title\">\r\n                Tours Reviews\r\n              </h3>\r\n              <div className=\"reviews-tours-box\">\r\n                {tourReviewsDisplayed}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </article>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default YourPage;\r\n"],"sourceRoot":""}